types {

}


entry("main",
      {xss: [][]i32},
      {[]i32})
  entry_main (n_5329 : i64,
              xss_5331 : [n_5329][n_5329]i32)
  : {*[n_5329]i32} = {
  let {segmap_group_size_5428 : i64} =
    get_size(segmap_group_size_5416, group_size)
  let {segmap_usable_groups_5429 : i64} =
    sdiv_up64(n_5329, segmap_group_size_5428)
  let {defunc_0_reduce_res_5430 : [n_5329]i32} =
    segmap(thread; ; groups=segmap_usable_groups_5429; groupsize=segmap_group_size_5428)
    (gtid_5431 < n_5329) (~phys_tid_5432) : {i32} {
      let {eta_p_5433 : [n_5329]i32} =
        xss_5331[gtid_5431, 0i64 :+ n_5329 * 1i64]
      let {defunc_0_foldl_res_5361 : i32} =
        loop {acc_5363 : i32} = {0i32}
        for i_5362:i64 < n_5329 do {
          let {b_5364 : i32} =
            eta_p_5433[i_5362]
          let {defunc_0_f_res_5365 : i32} =
            add32(acc_5363, b_5364)
          in {defunc_0_f_res_5365}
        }
      return {returns defunc_0_foldl_res_5361}
    }
  in {defunc_0_reduce_res_5430}
}

-- === Expected output after pass:
-- types {
--
-- }
--
--
--
-- entry("main",
--       {xss: [][]i32},
--       {[]i32})
--   entry_main (n_5329 : i64,
--               xss_5331 : [n_5329][n_5329]i32)
--   : {*[n_5329]i32} = {
--   let {segmap_group_size_5428 : i64} =
--     get_size(segmap_group_size_5416, group_size)
--   let {segmap_usable_groups_5429 : i64} =
--     sdiv_up64(n_5329, segmap_group_size_5428)
--   let {xss_coalesced_0 : [n_5329][n_5329]i32} =
--     manifest((1, 0), xss_5331)
--   let {defunc_0_reduce_res_5430 : [n_5329]i32} =
--     segmap(thread; ; groups=segmap_usable_groups_5429; groupsize=segmap_group_size_5428)
--     (gtid_5431 < n_5329) (~phys_tid_5432) : {i32} {
--       let {eta_p_5433 : [n_5329]i32} =
--         xss_coalesced_0[gtid_5431, 0i64 :+ n_5329 * 1i64]
--       let {defunc_0_foldl_res_5361 : i32} =
--         loop {acc_5363 : i32} = {0i32}
--         for i_5362:i64 < n_5329 do {
--           let {b_5364 : i32} =
--             eta_p_5433[i_5362]
--           let {defunc_0_f_res_5365 : i32} =
--             add32(acc_5363, b_5364)
--           in {defunc_0_f_res_5365}
--         }
--       return {returns defunc_0_foldl_res_5361}
--     }
--   in {defunc_0_reduce_res_5430}
-- }

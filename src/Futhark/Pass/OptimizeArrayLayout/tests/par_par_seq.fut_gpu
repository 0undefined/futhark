types {

}



entry("main",
      {xsss: [][][]i64},
      {[][]i64})
  entry_main (l_5235 : i64,
              n_5236 : i64,
              m_5237 : i64,
              xsss_5238 : [l_5235][n_5236][m_5237]i64)
  : {[l_5235][n_5236]i64#([3], [0])} = {
  let {nest_size_5378 : i64} =
    mul_nw64(l_5235, n_5236)
  let {segmap_group_size_5379 : i64} =
    get_size(segmap_group_size_5347, group_size)
  let {segmap_usable_groups_5380 : i64} =
    sdiv_up64(nest_size_5378, segmap_group_size_5379)
  let {defunc_0_map_res_5381 : [l_5235][n_5236]i64} =
    segmap(thread; ; groups=segmap_usable_groups_5380; groupsize=segmap_group_size_5379)
    (gtid_5382 < l_5235, gtid_5383 < n_5236) (~phys_tid_5384) : {i64} {
      let {defunc_0_f_res_5386 : i64} =
        loop {acc_5388 : i64} = {0i64}
        for i_5387:i64 < m_5237 do {
          let {b_5389 : i64} =
            xsss_5238[gtid_5382, gtid_5383, i_5387]
          let {defunc_0_f_res_5390 : i64} =
            add64(acc_5388, b_5389)
          in {defunc_0_f_res_5390}
        }
      return {returns defunc_0_f_res_5386}
    }
  in {defunc_0_map_res_5381}
}


-- === Expected output after pass: CONFIRMED
-- types {
--
-- }
--
--
--
-- entry("main",
--       {xsss: [][][]i64},
--       {[][]i64})
--   entry_main (l_5235 : i64,
--               n_5236 : i64,
--               m_5237 : i64,
--               xsss_5238 : [l_5235][n_5236][m_5237]i64)
--   : {[l_5235][n_5236]i64#([3], [0])} = {
--   let {nest_size_5378 : i64} =
--     mul_nw64(l_5235, n_5236)
--   let {segmap_group_size_5379 : i64} =
--     get_size(segmap_group_size_5347, group_size)
--   let {segmap_usable_groups_5380 : i64} =
--     sdiv_up64(nest_size_5378, segmap_group_size_5379)
--   let {xsss_coalesced_0 : [l_5235][n_5236][m_5237]i64} =
--     manifest((2, 0, 1), xsss_5238)
--   let {defunc_0_map_res_5381 : [l_5235][n_5236]i64} =
--     segmap(thread; ; groups=segmap_usable_groups_5380; groupsize=segmap_group_size_5379)
--     (gtid_5382 < l_5235, gtid_5383 < n_5236) (~phys_tid_5384) : {i64} {
--       let {defunc_0_f_res_5386 : i64} =
--         loop {acc_5388 : i64} = {0i64}
--         for i_5387:i64 < m_5237 do {
--           let {b_5389 : i64} =
--             xsss_coalesced_0[gtid_5382, gtid_5383, i_5387]
--           let {defunc_0_f_res_5390 : i64} =
--             add64(acc_5388, b_5389)
--           in {defunc_0_f_res_5390}
--         }
--       return {returns defunc_0_f_res_5386}
--     }
--   in {defunc_0_map_res_5381}
-- }

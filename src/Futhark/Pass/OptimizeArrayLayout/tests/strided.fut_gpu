types {

}



entry("main",
      {k: i64,
       xss: [][]i64},
      {[]i64})
  entry_main (n_5145 : i64,
              m_5146 : i64,
              k_5147 : i64,
              xss_5148 : [n_5145][m_5146]i64)
  : {[n_5145]i64#([3], [0])} = {
  let {upper_bound_5189 : i64} =
    sdiv64(m_5146, k_5147)
  let {segmap_group_size_5214 : i64} =
    get_size(segmap_group_size_5201, group_size)
  let {segmap_usable_groups_5215 : i64} =
    sdiv_up64(n_5145, segmap_group_size_5214)
  let {defunc_0_map_res_5216 : [n_5145]i64} =
    segmap(thread; ; groups=segmap_usable_groups_5215; groupsize=segmap_group_size_5214)
    (gtid_5217 < n_5145) (~phys_tid_5218) : {i64} {
      let {lifted_lambda_res_5220 : i64} =
        loop {s_5222 : i64} = {0i64}
        for i_5221:i64 < upper_bound_5189 do {
          let {+_rhs_5223 : i64} =
            mul64(k_5147, i_5221)
          let {+_rhs_5224 : i64} =
            xss_5148[gtid_5217, +_rhs_5223]
          let {loopres_5225 : i64} =
            add64(s_5222, +_rhs_5224)
          in {loopres_5225}
        }
      return {returns lifted_lambda_res_5220}
    }
  in {defunc_0_map_res_5216}
}


-- === Expected output after pass: CONFIRMED
-- types {
--
-- }
--
--
--
-- entry("main",
--       {k: i64,
--        xss: [][]i64},
--       {[]i64})
--   entry_main (n_5145 : i64,
--               m_5146 : i64,
--               k_5147 : i64,
--               xss_5148 : [n_5145][m_5146]i64)
--   : {[n_5145]i64#([3], [0])} = {
--   let {upper_bound_5189 : i64} =
--     sdiv64(m_5146, k_5147)
--   let {segmap_group_size_5214 : i64} =
--     get_size(segmap_group_size_5201, group_size)
--   let {segmap_usable_groups_5215 : i64} =
--     sdiv_up64(n_5145, segmap_group_size_5214)
--   let {defunc_0_map_res_5216 : [n_5145]i64} =
--     segmap(thread; ; groups=segmap_usable_groups_5215; groupsize=segmap_group_size_5214)
--     (gtid_5217 < n_5145) (~phys_tid_5218) : {i64} {
--       let {lifted_lambda_res_5220 : i64} =
--         loop {s_5222 : i64} = {0i64}
--         for i_5221:i64 < upper_bound_5189 do {
--           let {+_rhs_5223 : i64} =
--             mul64(k_5147, i_5221)
--           let {+_rhs_5224 : i64} =
--             xss_5148[gtid_5217, +_rhs_5223]
--           let {loopres_5225 : i64} =
--             add64(s_5222, +_rhs_5224)
--           in {loopres_5225}
--         }
--       return {returns lifted_lambda_res_5220}
--     }
--   in {defunc_0_map_res_5216}
-- }

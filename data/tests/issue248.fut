-- This seems to fail in some places.  Generated by tail2futhark (prettified a little bit).
--
-- ==
-- input { [67,67,67,65,65,67,66,65,65,68,65,66,67,65,65,67,68,67,65,67,68,68,66,67,68,68,67,67,67,66,65,68,67,66,67,67,67,65,67,67,67,66,67,67,66,65,67,67] }
-- output { True }

fun eqb (x: bool) (y: bool): bool =
  (! ((x || y)) || (x && y))
fun reshape_int (l: int) (x: []int): []int =
  let roundUp = ((l + ((shape (x))[0] - 1)) / (shape (x))[0]) in
  let extend = reshape ((((shape (x))[0] * roundUp))) (replicate (roundUp) (x)) in
  let (v1, _) = split (l) (extend) in
  v1
entry main (nucleotides: []int): bool =
  let t_v2 = reshape (8, 6) (reshape_int (8*6) nucleotides) in
  let t_v8 = rearrange (2, 0, 1) (reshape (8, 6, 4) (reshape_int (8*6*4) "ABCD")) in
  let t_v9 = reshape (4, 8, 6) (reshape_int (4*8*6) (reshape (8 * 6) t_v2)) in
  let t_v12 = let x = t_v8 in
              let y = t_v9 in
              let n = (shape (x))[1] in
              zipWith (fn (x: [][]int) (y: [][]int): [n][]bool =>
                       let n = (shape (x))[1] in
                       zipWith (fn (x: []int) (y: []int): [n]bool =>
                                zipWith (==) (x) (y)) (x) (y)) (x) (y) in
  let t_v15 = map (fn (x: [][]bool): []bool =>
                   map (fn (x: []bool): bool =>
                        reduce (||) (False) (x)) (x)) (t_v12) in
  let t_v18 = map (fn (x: [][]bool): []bool =>
                   map (fn (x: []bool): bool =>
                        reduce (||) (False) (x)) (x)) (t_v12) in
  let t_v21 = rearrange (0) (map (fn (x: []bool): bool =>
                                  reduce (&&) (True) (x)) (rearrange (1, 0) (t_v18))) in
  let t_v26 = reduce (&&) (True) (let x = t_v21 in
                                  let y = [False, False, False, True, False,
                                           True, False, False] in
                                  zipWith eqb (x) (y)) in
  t_v26

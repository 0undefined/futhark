.. _binary-data-format:

Binary Data Format
==================

Futhark supports a binary format for input files, which this page
details. Currently reading binary input is only supported for the C programs
generated by ``futhark-c`` and ``futhark-opencl``.

Currently there is no way to convert input from text format to the binary
format, but you can generate random data in the binary format with
:ref:`futhark-dataset(1)`.

Currently there is no way to output data in the binary format from Futhark
programs.

Specification
-------------

Elements that are bigger than one byte are always stored using little endian --
we mostly run our code on x86 hardware so this seemed like a reasonable choice.

When reading input for an argument to the entry function, we need to be able to
differentiate between text and binary input. If the first non-whitespace
character of the input is a ``b`` we will parse this argument as binary,
otherwise we will parse it in text format. Allowing precending whitespace
characters makes it easy to use binary input for some arguments, and text input
for others.

The general format has 4 bytes as the header::

  b <version> <is_array> <type_enum>

Where ``version`` is the version of the binary format used for encoding
(currently 1), ``is_array`` is a boolean value indicating if the following value
is an array, and ``type_enum`` is the enum value for the following primitive
value(s).

Encoding a scalar value is done by appending the binary little endian
representation of it::

  b <version> 0 <type_enum> <value>

To encode an array we must encode the number of dimensions ``n`` as a single
byte, each dimension ``dim_i`` as an ``int64``, and finally all the values in
their binary little endian representation::

  b <version> 1 <type_enum> <n> <dim_1> <dim_2> ... <dim_n> <values>


Enum Values
~~~~~~~~~~~

Enum values are taken from ``src/Futhark/Representation/Primitive.hs``. As of
today (Feb 2017), this is::

  fromEnum (IntType Int8)      = 0
  fromEnum (IntType Int16)     = 1
  fromEnum (IntType Int32)     = 2
  fromEnum (IntType Int64)     = 3
  fromEnum (FloatType Float32) = 4
  fromEnum (FloatType Float64) = 5
  fromEnum Bool                = 6
  fromEnum Cert                = 7

Certificates are not supported as input data.

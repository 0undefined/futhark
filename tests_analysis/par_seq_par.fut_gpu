-- Source code:

-- def main [l][n][m] (xsss: [l][n][m]i64) : [l][m]i64 =
--   -- #[incremental_flattening(no_intra)]
--   -- #[incremental_flattening(no_outer)]
--   map (\xss ->
--     #[unsafe]
--     loop _=xss[0] for i < n do
--       map (\x -> x*2) xss[i]
--   ) xsss

-- IR:

types {

}



entry("main",
      {xsss: [][][]i64},
      {[][]i64})
  entry_main (l_5220 : i64,
              n_5221 : i64,
              m_5222 : i64,
              xsss_5223 : [l_5220][n_5221][m_5222]i64)
  : {[l_5220][m_5222]i64#([3], [0])} = {
  let {index_5319 : [l_5220][m_5222]i64} =
    xsss_5223[0i64 :+ l_5220 * 1i64, 0i64, 0i64 :+ m_5222 * 1i64]
  let {max_group_size_5334 : i64} =
    get_size_max(group_size)
  let {fits_5335 : bool} =
    sle64(m_5222, max_group_size_5334)
  let {suff_intra_par_5333 : bool} =
    cmp_size(suff_intra_par_0, threshold(32, )) <= m_5222
  let {intra_suff_and_fits_5336 : bool} =
    logand(suff_intra_par_5333, fits_5335)
  let {nest_size_5413 : i64} =
    mul_nw64(l_5220, m_5222)
  let {segmap_group_size_5414 : i64} =
    get_size(segmap_group_size_5370, group_size)
  let {segmap_usable_groups_5415 : i64} =
    sdiv_up_safe64(nest_size_5413, segmap_group_size_5414)
  let {defunc_0_map_res_5318 : [l_5220][m_5222]i64} =
    if <equiv> intra_suff_and_fits_5336
    then {
      let {defunc_0_map_res_5337 : [l_5220][m_5222]i64} =
        segmap(group; ; groups=l_5220; groupsize=m_5222)
        (gtid_5338 < l_5220) (~phys_group_id_5339) : {[m_5222]i64} {
          let {xsss_transformed_row_5342 : [m_5222]i64} =
            xsss_5223[gtid_5338, 0i64, 0i64 :+ m_5222 * 1i64]
          let {lifted_lambda_res_5344 : [m_5222]i64} =
            loop {nameless_5346 : [m_5222]i64} = {xsss_transformed_row_5342}
            for i_5345:i64 < n_5221 do {
              let {defunc_0_map_res_5348 : [m_5222]i64} =
                segmap(thread; ; )
                (gtid_5349 < m_5222) (~phys_tid_5350) : {i64} {
                  let {eta_p_5351 : i64} =
                    xsss_5223[gtid_5338, i_5345, gtid_5349]
                  let {lifted_lambda_res_5352 : i64} =
                    mul64(2i64, eta_p_5351)
                  return {returns lifted_lambda_res_5352}
                }
              in {defunc_0_map_res_5348}
            }
          return {returns lifted_lambda_res_5344}
        }
      in {defunc_0_map_res_5337}
    } else {
      let {nameless_expanded_inter_copy_5403 : [l_5220][m_5222]i64} =
        copy(index_5319)
      let {defunc_0_map_res_5404 : [l_5220][m_5222]i64} =
        loop {nameless_expanded_5406 : *[l_5220][m_5222]i64} = {nameless_expanded_inter_copy_5403}
        for i_5405:i64 < n_5221 do {
          let {lifted_lambda_res_5416 : [l_5220][m_5222]i64} =
            segmap(thread; ; groups=segmap_usable_groups_5415; groupsize=segmap_group_size_5414)
            (gtid_5417 < l_5220, gtid_5418 < m_5222) (~phys_tid_5419) : {i64} {
              let {eta_p_5420 : i64} =
                xsss_5223[gtid_5417, i_5405, gtid_5418]
              let {lifted_lambda_res_5421 : i64} =
                mul64(2i64, eta_p_5420)
              return {returns lifted_lambda_res_5421}
            }
          in {lifted_lambda_res_5416}
        }
      in {defunc_0_map_res_5404}
    }
    : {[l_5220][m_5222]i64}
  in {defunc_0_map_res_5318}
}

-- === Expected output of analysis:
-- (segmap) defunc_0_map_res_5337 : {
--     (arr) xsss_5223 : [0, 1, 2] {
--         (idx) eta_p_5351 :
--             0 : dependencies = {gtid_5338 0 tid}
--             1 : dependencies = {i_5345 1 iter}
--             2 : dependencies = {gtid_5349 2 tid}
--     }
-- }
-- (segmap) defunc_0_map_res_5348 : {
--     (arr) xsss_5223 : [0, 1, 2] {
--         (idx) eta_p_5351 :
--             0 : dependencies = {gtid_5338 0 tid}
--             1 : dependencies = {i_5345 1 iter}
--             2 : dependencies = {gtid_5349 2 tid}
--     }
-- }
-- (segmap) lifted_lambda_res_5416 : {
--     (arr) xsss_5223 : [0, 1, 2] {
--         (idx) eta_p_5420 :
--             0 : dependencies = {gtid_5417 1 tid}
--             1 : dependencies = {i_5405 0 iter}
--             2 : dependencies = {gtid_5418 2 tid}
--     }
-- }

-- Source code:

-- entry main [n] (xs: [n]i64) : i64 =
--   loop accumulator = 3 for i < n do
--     #[unsafe]
--     accumulator + xs[i]

-- IR:

types {

}



entry("main",
      {xs: []i64},
      {i64})
  entry_main (n_5074 : i64,
              xs_5075 : [n_5074]i64)
  : {i64} = {
  let {const_dev_5085 : [1i64]i64} =
    replicate([1i64], 3i64)
  let {main_res_dev_5084 : [1i64]i64} =
    loop {accumulator_5086 : [1i64]i64} = {const_dev_5085}
    for i_5080:i64 < n_5074 do {
      let {loopres_dev_5092 : [1i64]i64} =
        gpu : {i64} {
          let {+_rhs_5087 : i64} =
            xs_5075[i_5080]
          let {accumulator_5089 : i64} =
            accumulator_5086[0i64]
          let {loopres_5091 : i64} =
            add64(+_rhs_5087, accumulator_5089)
          in {loopres_5091}
        }
      in {loopres_dev_5092}
    }
  let {main_res_5079 : i64} =
    main_res_dev_5084[0i64]
  in {main_res_5079}
}

-- === Expected output of analysis: CONFIRMED

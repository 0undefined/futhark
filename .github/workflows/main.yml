name: CI

on:
  pull_request:
    branches: [ master ]

  push:
    branches: [ master ]

jobs:
  test-linux:
    runs-on: ubuntu-18.04

    steps:
    - uses: actions/checkout@v2

    - name: Install Nix
      uses: cachix/install-nix-action@v8

    - uses: actions/cache@v2
      name: Cache ~/.cabal/packages, ~/.cabal/store and dist-newstyle
      with:
        path: |
          ~/.cabal/packages
          ~/.cabal/store
          dist-newstyle
        key: ${{ runner.os }}-${{ matrix.ghc }}

    - name: Style check
      run: nix-shell --pure --run "tools/style-check.sh src"

    - name: Build
      run: |
        nix-shell --pure --run "cabal update"
        nix-shell --pure --run "cabal build"

    - name: Unit tests
      run: nix-shell --pure --run "cabal test"

    - name: Integration and library tests
      run: nix-shell --pure --run "./run-tests.sh"

  build-linux-nix:
    runs-on: ubuntu-18.04

    steps:
    - uses: actions/checkout@v2

    - name: Install Nix
      uses: cachix/install-nix-action@v8

    - name: Cache cabal
      uses: actions/cache@v1
      env:
        cache-name: cache-cabal
      with:
        path: ~/.cabal
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('futhark.cabal') }}

    - name: Build Futhark
      run: nix-build --argstr suffix nightly-linux-x86_64 --argstr commit $GITHUB_SHA

    - uses: actions/upload-artifact@v1
      with:
        name: futhark
        path: result/futhark-nightly-linux-x86_64.tar.xz

    - name: Install SSH key
      uses: shimataro/ssh-key-action@v2
      with:
        key: ${{ secrets.SSHKEY }}
        known_hosts: ${{ secrets.KNOWN_HOSTS }}

    - name: scp to server
      run: scp -o StrictHostKeyChecking=no result/futhark-nightly-linux-x86_64.tar.xz futhark@futhark-lang.org:/var/www/htdocs/futhark-lang.org/releases

  build-linux-cabal:
    runs-on: ubuntu-18.04

    steps:
    - uses: actions/checkout@v2

    - name: Install dependencies
      run: |
        sudo add-apt-repository ppa:hvr/ghc
        sudo apt-get update
        sudo apt-get install ghc-8.8.2

    - name: Cache cabal
      uses: actions/cache@v1
      env:
        cache-name: cache-cabal
      with:
        path: ~/.cabal
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('futhark.cabal') }}

    - name: Build Futhark
      run: |
        export PATH=/opt/ghc/bin:$PATH
        cabal --version
        cabal update
        cabal install --install-method=copy --overwrite-policy=always

  build-linux-stack:
    runs-on: ubuntu-18.04

    steps:
    - uses: actions/checkout@v2

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y haskell-stack

    - name: Cache stack
      uses: actions/cache@v1
      env:
        cache-name: cache-stack
      with:
        path: .stack-work
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('futhark.cabal') }}-${{ hashFiles('stack.yaml') }}-${{ hashFiles('stack.yaml.lock') }}

    - name: Build Futhark
      run: |
        stack setup
        stack install

  build-mac:
    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v2

    - name: Install dependencies
      run: |
        brew install cabal-install ghc

    - name: Cache cabal
      uses: actions/cache@v1
      env:
        cache-name: cache-cabal
      with:
        path: ~/.cabal
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('futhark.cabal') }}

    - name: Build
      run: |
        cabal v2-update
        cabal install --install-method=copy --overwrite-policy=always

  build-windows:
    runs-on: windows-2019

    steps:
    - uses: actions/checkout@v2

    - name: Install dependencies
      run: |
        choco install -y msys2
        choco install -y ghc --version=8.8.2 --allow-downgrade

    - name: Cache cabal
      uses: actions/cache@v1
      env:
        cache-name: cache-cabal
      with:
        path: ~\AppData\cabal
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('futhark.cabal') }}

    - name: Build
      shell: bash
      run: |
        cabal update
        try() { cabal install -j1 --install-method=copy --overwrite-policy=always --installdir=.; }
        try || try || try

    - uses: papeloto/action-zip@v1
      with:
        files: futhark.exe
        dest: futhark-nightly-windows-x86_64.zip

    - uses: actions/upload-artifact@v1
      with:
        name: futhark
        path: futhark-nightly-windows-x86_64.zip

    - name: Install SSH key
      uses: shimataro/ssh-key-action@v2
      with:
        key: ${{ secrets.SSHKEY }}
        known_hosts: ${{ secrets.KNOWN_HOSTS }}

    - name: scp to server
      run: scp -o StrictHostKeyChecking=no futhark-nightly-windows-x86_64.zip futhark@futhark-lang.org:/var/www/htdocs/futhark-lang.org/releases
